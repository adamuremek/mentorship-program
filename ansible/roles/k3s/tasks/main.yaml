- name: Install k3s
  shell: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--disable=traefik" sh -

- name: Install k3s dependencies
  apt:
    name:
      - python3-kubernetes
    state: present

- name: Enable k3s service
  systemd:
    name: k3s
    state: restarted
    enabled: yes

    
- name: Add longhorn storage
  shell:
    cmd: "kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/v1.6.0/deploy/longhorn.yaml"
  

# - name: Create media pv config
#   template:
#     src: "/{{ absolute_project_path }}/ansible/roles/k3s/templates/template-media-pv.yaml"
#     dest: "/{{ absolute_project_path }}/kubernetes/media-pv.yaml"

# - name: Create static pv config
#   template:
#     src: "/{{ absolute_project_path }}/ansible/roles/k3s/templates/template-static-pv.yaml"
#     dest: "/{{ absolute_project_path }}/kubernetes/static-pv.yaml"


- name: Apply k3s resources
  shell:
    cmd: "kubectl apply -f {{ item }}"
  with_items:
    - "/{{ absolute_project_path }}/kubernetes/storage-class.yaml"
    # - "/{{ absolute_project_path }}/kubernetes/media-pv.yaml"
    - "/{{ absolute_project_path }}/kubernetes/media-pvc.yaml"
    # - "/{{ absolute_project_path }}/kubernetes/static-pv.yaml"
    - "/{{ absolute_project_path }}/kubernetes/static-pvc.yaml"
    - "/{{ absolute_project_path }}/kubernetes/mentor-configmap.yaml"
    - "/{{ absolute_project_path }}/kubernetes/mentor-secret.yaml"
    - "/{{ absolute_project_path }}/kubernetes/mentor-deployment.yaml"
    - "/{{ absolute_project_path }}/kubernetes/mentor-service.yaml"

- name: Apply ingress-nginx
  shell:
    cmd: "kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/baremetal/deploy.yaml"
  
- name: Install cert-manager
  shell:
    cmd: "kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.4/cert-manager.yaml"

- name: Create ingress config
  template:
    src: "/{{ absolute_project_path }}/ansible/roles/k3s/templates/template-mentor-ingress.yaml"
    dest: "/{{ absolute_project_path }}/kubernetes/ingress-controller/mentor-ingress.yaml"

- name: Create production issuer config
  template:
    src: "/{{ absolute_project_path }}/ansible/roles/k3s/templates/template-prod-issuer.yaml"
    dest: "/{{ absolute_project_path }}/kubernetes/ingress-controller/prod-issuer.yaml"

- name: Create staging issuer config
  template:
    src: "/{{ absolute_project_path }}/ansible/roles/k3s/templates/template-staging-issuer.yaml"
    dest: "/{{ absolute_project_path }}/kubernetes/ingress-controller/staging-issuer.yaml"

#TODO: different configs depending on prod or staging
- name: Apply configs
  shell:
    cmd: "kubectl apply -f {{ item }}"
  with_items:
    - "/{{ absolute_project_path }}/kubernetes/ingress-controller/mentor-ingress.yaml"
    #- "/{{ absolute_project_path }}/kubernetes/ingress-controller/prod-issuer.yaml"
    #- "/{{ absolute_project_path }}/kubernetes/ingress-controller/staging-issuer.yaml"
